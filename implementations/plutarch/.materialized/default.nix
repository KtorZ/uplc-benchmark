{
  pkgs = hackage:
    {
      packages = {
        bytestring.revision = (((hackage.bytestring)."0.11.4.0").revisions).default;
        wl-pprint-annotated.revision = import ./cabal-files/wl-pprint-annotated.nix;
        mwc-random.revision = import ./cabal-files/mwc-random.nix;
        safe-exceptions.revision = import ./cabal-files/safe-exceptions.nix;
        fingertree.revision = import ./cabal-files/fingertree.nix;
        plutus-tx.revision = import ./cabal-files/plutus-tx.nix;
        safe.revision = import ./cabal-files/safe.nix;
        dlist.revision = import ./cabal-files/dlist.nix;
        dlist.flags.werror = false;
        colour.revision = import ./cabal-files/colour.nix;
        exceptions.revision = (((hackage.exceptions)."0.10.4").revisions).default;
        concurrent-output.revision = import ./cabal-files/concurrent-output.nix;
        directory.revision = (((hackage.directory)."1.3.6.2").revisions).default;
        th-lift-instances.revision = import ./cabal-files/th-lift-instances.nix;
        vector-stream.revision = import ./cabal-files/vector-stream.nix;
        dependent-map.revision = import ./cabal-files/dependent-map.nix;
        tasty-hedgehog.revision = import ./cabal-files/tasty-hedgehog.nix;
        filepath.revision = (((hackage.filepath)."1.4.2.2").revisions).default;
        mtl.revision = (((hackage.mtl)."2.2.2").revisions).default;
        cardano-strict-containers.revision = import ./cabal-files/cardano-strict-containers.nix;
        dependent-sum.revision = import ./cabal-files/dependent-sum.nix;
        plutus-core.revision = import ./cabal-files/plutus-core.nix;
        plutus-core.flags.with-inline-r = false;
        vector-binary-instances.revision = import ./cabal-files/vector-binary-instances.nix;
        foundation.revision = import ./cabal-files/foundation.nix;
        foundation.flags.linktest = false;
        foundation.flags.bounds-check = false;
        foundation.flags.bench-all = false;
        foundation.flags.experimental = false;
        foundation.flags.doctest = false;
        foundation.flags.minimal-deps = false;
        plutus-ledger-api.revision = import ./cabal-files/plutus-ledger-api.nix;
        ghc-bignum.revision = (((hackage.ghc-bignum)."1.3").revisions).default;
        adjunctions.revision = import ./cabal-files/adjunctions.nix;
        megaparsec.revision = import ./cabal-files/megaparsec.nix;
        megaparsec.flags.dev = false;
        tagged.revision = import ./cabal-files/tagged.nix;
        tagged.flags.deepseq = true;
        tagged.flags.transformers = true;
        data-fix.revision = import ./cabal-files/data-fix.nix;
        th-orphans.revision = import ./cabal-files/th-orphans.nix;
        sop-core.revision = import ./cabal-files/sop-core.nix;
        unix-compat.revision = import ./cabal-files/unix-compat.nix;
        unix-compat.flags.old-time = false;
        generics-sop.revision = import ./cabal-files/generics-sop.nix;
        cryptonite.revision = import ./cabal-files/cryptonite.nix;
        cryptonite.flags.check_alignment = false;
        cryptonite.flags.support_sse = false;
        cryptonite.flags.use_target_attributes = true;
        cryptonite.flags.support_deepseq = true;
        cryptonite.flags.support_rdrand = true;
        cryptonite.flags.old_toolchain_inliner = false;
        cryptonite.flags.integer-gmp = true;
        cryptonite.flags.support_pclmuldq = false;
        cryptonite.flags.support_aesni = true;
        statistics.revision = import ./cabal-files/statistics.nix;
        ghc-prim.revision = (((hackage.ghc-prim)."0.8.0").revisions).default;
        criterion-measurement.revision = import ./cabal-files/criterion-measurement.nix;
        criterion-measurement.flags.fast = false;
        terminal-size.revision = import ./cabal-files/terminal-size.nix;
        transformers-base.revision = import ./cabal-files/transformers-base.nix;
        transformers-base.flags.orphaninstances = true;
        base16-bytestring.revision = import ./cabal-files/base16-bytestring.nix;
        unliftio-core.revision = import ./cabal-files/unliftio-core.nix;
        memory.revision = import ./cabal-files/memory.nix;
        memory.flags.support_deepseq = true;
        memory.flags.support_bytestring = true;
        parser-combinators.revision = import ./cabal-files/parser-combinators.nix;
        parser-combinators.flags.dev = false;
        constraints.revision = import ./cabal-files/constraints.nix;
        parsec.revision = (((hackage.parsec)."3.1.15.0").revisions).default;
        lens.revision = import ./cabal-files/lens.nix;
        lens.flags.test-templates = true;
        lens.flags.benchmark-uniplate = false;
        lens.flags.test-properties = true;
        lens.flags.j = false;
        lens.flags.trustworthy = true;
        lens.flags.test-hunit = true;
        lens.flags.dump-splices = false;
        lens.flags.inlining = true;
        tasty.revision = import ./cabal-files/tasty.nix;
        tasty.flags.unix = true;
        js-chart.revision = import ./cabal-files/js-chart.nix;
        some.revision = import ./cabal-files/some.nix;
        some.flags.newtype-unsafe = true;
        ghc-heap.revision = (((hackage.ghc-heap)."9.2.8").revisions).default;
        bifunctors.revision = import ./cabal-files/bifunctors.nix;
        bifunctors.flags.tagged = true;
        integer-logarithms.revision = import ./cabal-files/integer-logarithms.nix;
        integer-logarithms.flags.check-bounds = false;
        integer-logarithms.flags.integer-gmp = true;
        haskeline.revision = (((hackage.haskeline)."0.8.2").revisions).default;
        strict.revision = import ./cabal-files/strict.nix;
        ghc.revision = (((hackage.ghc)."9.2.8").revisions).default;
        cardano-crypto-class.revision = import ./cabal-files/cardano-crypto-class.nix;
        cardano-crypto-class.flags.secp256k1-support = true;
        cardano-crypto-class.flags.development = false;
        base-compat.revision = import ./cabal-files/base-compat.nix;
        binary-orphans.revision = import ./cabal-files/binary-orphans.nix;
        list-t.revision = import ./cabal-files/list-t.nix;
        aeson.revision = import ./cabal-files/aeson.nix;
        aeson.flags.ordered-keymap = true;
        foldable1-classes-compat.revision = import ./cabal-files/foldable1-classes-compat.nix;
        foldable1-classes-compat.flags.tagged = true;
        utf8-string.revision = import ./cabal-files/utf8-string.nix;
        Cabal.revision = (((hackage.Cabal)."3.6.3.0").revisions).default;
        splitmix.revision = import ./cabal-files/splitmix.nix;
        splitmix.flags.optimised-mixer = false;
        assoc.revision = import ./cabal-files/assoc.nix;
        assoc.flags.tagged = true;
        containers.revision = (((hackage.containers)."0.6.5.1").revisions).default;
        nothunks.revision = import ./cabal-files/nothunks.nix;
        nothunks.flags.bytestring = true;
        nothunks.flags.text = true;
        nothunks.flags.vector = true;
        call-stack.revision = import ./cabal-files/call-stack.nix;
        prettyprinter.revision = import ./cabal-files/prettyprinter.nix;
        prettyprinter.flags.buildreadme = false;
        prettyprinter.flags.text = true;
        flat.revision = import ./cabal-files/flat.nix;
        th-expand-syns.revision = import ./cabal-files/th-expand-syns.nix;
        clock.revision = import ./cabal-files/clock.nix;
        clock.flags.llvm = false;
        stm.revision = (((hackage.stm)."2.5.0.2").revisions).default;
        semigroups.revision = import ./cabal-files/semigroups.nix;
        semigroups.flags.bytestring = true;
        semigroups.flags.bytestring-builder = false;
        semigroups.flags.tagged = true;
        semigroups.flags.containers = true;
        semigroups.flags.deepseq = true;
        semigroups.flags.template-haskell = true;
        semigroups.flags.binary = true;
        semigroups.flags.transformers = true;
        semigroups.flags.unordered-containers = true;
        semigroups.flags.text = true;
        semigroups.flags.hashable = true;
        OneTuple.revision = import ./cabal-files/OneTuple.nix;
        bin.revision = import ./cabal-files/bin.nix;
        network-uri.revision = import ./cabal-files/network-uri.nix;
        pretty-show.revision = import ./cabal-files/pretty-show.nix;
        lazysmallcheck.revision = import ./cabal-files/lazysmallcheck.nix;
        base.revision = (((hackage.base)."4.16.4.0").revisions).default;
        typed-process.revision = import ./cabal-files/typed-process.nix;
        time.revision = (((hackage.time)."1.11.1.1").revisions).default;
        data-default-instances-old-locale.revision = import ./cabal-files/data-default-instances-old-locale.nix;
        microlens.revision = import ./cabal-files/microlens.nix;
        deriving-aeson.revision = import ./cabal-files/deriving-aeson.nix;
        resourcet.revision = import ./cabal-files/resourcet.nix;
        lifted-async.revision = import ./cabal-files/lifted-async.nix;
        split.revision = import ./cabal-files/split.nix;
        uuid-types.revision = import ./cabal-files/uuid-types.nix;
        barbies.revision = import ./cabal-files/barbies.nix;
        case-insensitive.revision = import ./cabal-files/case-insensitive.nix;
        data-default.revision = import ./cabal-files/data-default.nix;
        th-abstraction.revision = import ./cabal-files/th-abstraction.nix;
        dictionary-sharing.revision = import ./cabal-files/dictionary-sharing.nix;
        hsc2hs.revision = import ./cabal-files/hsc2hs.nix;
        hsc2hs.flags.in-ghc-tree = false;
        semigroupoids.revision = import ./cabal-files/semigroupoids.nix;
        semigroupoids.flags.tagged = true;
        semigroupoids.flags.containers = true;
        semigroupoids.flags.distributive = true;
        semigroupoids.flags.unordered-containers = true;
        semigroupoids.flags.contravariant = true;
        semigroupoids.flags.comonad = true;
        double-conversion.revision = import ./cabal-files/double-conversion.nix;
        double-conversion.flags.developer = false;
        double-conversion.flags.embedded_double_conversion = true;
        optparse-applicative.revision = import ./cabal-files/optparse-applicative.nix;
        optparse-applicative.flags.process = true;
        half.revision = import ./cabal-files/half.nix;
        word-array.revision = import ./cabal-files/word-array.nix;
        free.revision = import ./cabal-files/free.nix;
        constraints-extras.revision = import ./cabal-files/constraints-extras.nix;
        constraints-extras.flags.build-readme = true;
        profunctors.revision = import ./cabal-files/profunctors.nix;
        terminfo.revision = (((hackage.terminfo)."0.4.1.5").revisions).default;
        void.revision = import ./cabal-files/void.nix;
        void.flags.safe = false;
        vty-crossplatform.revision = import ./cabal-files/vty-crossplatform.nix;
        vty-crossplatform.flags.demos = false;
        old-locale.revision = import ./cabal-files/old-locale.nix;
        serialise.revision = import ./cabal-files/serialise.nix;
        serialise.flags.newtime15 = true;
        generically.revision = import ./cabal-files/generically.nix;
        async.revision = import ./cabal-files/async.nix;
        async.flags.bench = false;
        plutarch.revision = import ./cabal-files/plutarch.nix;
        base-orphans.revision = import ./cabal-files/base-orphans.nix;
        microlens-mtl.revision = import ./cabal-files/microlens-mtl.nix;
        cabal-doctest.revision = import ./cabal-files/cabal-doctest.nix;
        kan-extensions.revision = import ./cabal-files/kan-extensions.nix;
        reflection.revision = import ./cabal-files/reflection.nix;
        reflection.flags.slow = false;
        reflection.flags.template-haskell = true;
        witherable.revision = import ./cabal-files/witherable.nix;
        random.revision = import ./cabal-files/random.nix;
        primitive.revision = import ./cabal-files/primitive.nix;
        deepseq.revision = (((hackage.deepseq)."1.4.6.1").revisions).default;
        data-clist.revision = import ./cabal-files/data-clist.nix;
        type-equality.revision = import ./cabal-files/type-equality.nix;
        text-iso8601.revision = import ./cabal-files/text-iso8601.nix;
        foldl.revision = import ./cabal-files/foldl.nix;
        universe-base.revision = import ./cabal-files/universe-base.nix;
        hedgehog.revision = import ./cabal-files/hedgehog.nix;
        nonempty-vector.revision = import ./cabal-files/nonempty-vector.nix;
        doctest.revision = import ./cabal-files/doctest.nix;
        config-ini.revision = import ./cabal-files/config-ini.nix;
        config-ini.flags.enable-doctests = false;
        mmorph.revision = import ./cabal-files/mmorph.nix;
        happy.revision = import ./cabal-files/happy.nix;
        quickcheck-transformer.revision = import ./cabal-files/quickcheck-transformer.nix;
        microstache.revision = import ./cabal-files/microstache.nix;
        microlens-th.revision = import ./cabal-files/microlens-th.nix;
        th-utilities.revision = import ./cabal-files/th-utilities.nix;
        distributive.revision = import ./cabal-files/distributive.nix;
        distributive.flags.tagged = true;
        distributive.flags.semigroups = true;
        testing-type-modifiers.revision = import ./cabal-files/testing-type-modifiers.nix;
        haskell-lexer.revision = import ./cabal-files/haskell-lexer.nix;
        rts.revision = (((hackage.rts)."1.0.2").revisions).default;
        temporary.revision = import ./cabal-files/temporary.nix;
        ghci.revision = (((hackage.ghci)."9.2.8").revisions).default;
        integer-conversion.revision = import ./cabal-files/integer-conversion.nix;
        cassava.revision = import ./cabal-files/cassava.nix;
        cassava.flags.bytestring--lt-0_10_4 = false;
        template-haskell.revision = (((hackage.template-haskell)."2.18.0.0").revisions).default;
        mono-traversable.revision = import ./cabal-files/mono-traversable.nix;
        binary.revision = (((hackage.binary)."0.8.9.0").revisions).default;
        tasty-golden.revision = import ./cabal-files/tasty-golden.nix;
        tasty-golden.flags.build-example = false;
        indexed-traversable-instances.revision = import ./cabal-files/indexed-traversable-instances.nix;
        boring.revision = import ./cabal-files/boring.nix;
        boring.flags.tagged = true;
        base64-bytestring.revision = import ./cabal-files/base64-bytestring.nix;
        brick.revision = import ./cabal-files/brick.nix;
        brick.flags.demos = false;
        data-default-instances-containers.revision = import ./cabal-files/data-default-instances-containers.nix;
        lifted-base.revision = import ./cabal-files/lifted-base.nix;
        ansi-terminal.revision = import ./cabal-files/ansi-terminal.nix;
        ansi-terminal.flags.example = false;
        blaze-builder.revision = import ./cabal-files/blaze-builder.nix;
        vector-algorithms.revision = import ./cabal-files/vector-algorithms.nix;
        vector-algorithms.flags.internalchecks = false;
        vector-algorithms.flags.llvm = false;
        vector-algorithms.flags.properties = true;
        vector-algorithms.flags.boundschecks = true;
        vector-algorithms.flags.unsafechecks = false;
        vector-algorithms.flags.bench = true;
        old-time.revision = import ./cabal-files/old-time.nix;
        invariant.revision = import ./cabal-files/invariant.nix;
        ghc-boot.revision = (((hackage.ghc-boot)."9.2.8").revisions).default;
        data-default-class.revision = import ./cabal-files/data-default-class.nix;
        ghc-paths.revision = import ./cabal-files/ghc-paths.nix;
        deriving-compat.revision = import ./cabal-files/deriving-compat.nix;
        deriving-compat.flags.new-functor-classes = true;
        deriving-compat.flags.template-haskell-2-11 = true;
        deriving-compat.flags.base-4-9 = true;
        word-wrap.revision = import ./cabal-files/word-wrap.nix;
        text-short.revision = import ./cabal-files/text-short.nix;
        text-short.flags.asserts = false;
        quickcheck-instances.revision = import ./cabal-files/quickcheck-instances.nix;
        quickcheck-instances.flags.bytestring-builder = false;
        fin.revision = import ./cabal-files/fin.nix;
        monad-control.revision = import ./cabal-files/monad-control.nix;
        transformers-compat.revision = import ./cabal-files/transformers-compat.nix;
        transformers-compat.flags.two = false;
        transformers-compat.flags.mtl = true;
        transformers-compat.flags.four = false;
        transformers-compat.flags.five = false;
        transformers-compat.flags.five-three = true;
        transformers-compat.flags.three = false;
        transformers-compat.flags.generic-deriving = true;
        integer-gmp.revision = (((hackage.integer-gmp)."1.1").revisions).default;
        th-reify-many.revision = import ./cabal-files/th-reify-many.nix;
        text-zipper.revision = import ./cabal-files/text-zipper.nix;
        dom-lt.revision = import ./cabal-files/dom-lt.nix;
        formatting.revision = import ./cabal-files/formatting.nix;
        formatting.flags.no-double-conversion = false;
        time-compat.revision = import ./cabal-files/time-compat.nix;
        time-compat.flags.old-locale = false;
        process.revision = (((hackage.process)."1.6.16.0").revisions).default;
        unix.revision = (((hackage.unix)."2.7.2.2").revisions).default;
        PyF.revision = import ./cabal-files/PyF.nix;
        PyF.flags.python_test = false;
        vector-th-unbox.revision = import ./cabal-files/vector-th-unbox.nix;
        data-default-instances-dlist.revision = import ./cabal-files/data-default-instances-dlist.nix;
        data-array-byte.revision = import ./cabal-files/data-array-byte.nix;
        dense-linear-algebra.revision = import ./cabal-files/dense-linear-algebra.nix;
        heapwords.revision = import ./cabal-files/heapwords.nix;
        ral.revision = import ./cabal-files/ral.nix;
        ral.flags.adjunctions = true;
        ral.flags.semigroupoids = true;
        ral.flags.distributive = true;
        algebraic-graphs.revision = import ./cabal-files/algebraic-graphs.nix;
        th-lift.revision = import ./cabal-files/th-lift.nix;
        composition-prelude.revision = import ./cabal-files/composition-prelude.nix;
        composition-prelude.flags.development = false;
        int-cast.revision = import ./cabal-files/int-cast.nix;
        dec.revision = import ./cabal-files/dec.nix;
        monoidal-containers.revision = import ./cabal-files/monoidal-containers.nix;
        monoidal-containers.flags.split-these = true;
        size-based.revision = import ./cabal-files/size-based.nix;
        multiset.revision = import ./cabal-files/multiset.nix;
        parallel.revision = import ./cabal-files/parallel.nix;
        ansi-terminal-types.revision = import ./cabal-files/ansi-terminal-types.nix;
        transformers.revision = (((hackage.transformers)."0.5.6.2").revisions).default;
        code-page.revision = import ./cabal-files/code-page.nix;
        bimap.revision = import ./cabal-files/bimap.nix;
        cardano-crypto.revision = import ./cabal-files/cardano-crypto.nix;
        cardano-crypto.flags.golden-tests-exe = false;
        cardano-crypto.flags.golden-tests = false;
        lazy-search.revision = import ./cabal-files/lazy-search.nix;
        logict.revision = import ./cabal-files/logict.nix;
        criterion.revision = import ./cabal-files/criterion.nix;
        criterion.flags.embed-data-files = false;
        criterion.flags.fast = false;
        indexed-traversable.revision = import ./cabal-files/indexed-traversable.nix;
        these.revision = import ./cabal-files/these.nix;
        vty-unix.revision = import ./cabal-files/vty-unix.nix;
        dependent-sum-template.revision = import ./cabal-files/dependent-sum-template.nix;
        recursion-schemes.revision = import ./cabal-files/recursion-schemes.nix;
        recursion-schemes.flags.template-haskell = true;
        newtype.revision = import ./cabal-files/newtype.nix;
        unordered-containers.revision = import ./cabal-files/unordered-containers.nix;
        unordered-containers.flags.debug = false;
        QuickCheck.revision = import ./cabal-files/QuickCheck.nix;
        QuickCheck.flags.old-random = false;
        QuickCheck.flags.templatehaskell = true;
        syb.revision = import ./cabal-files/syb.nix;
        contravariant.revision = import ./cabal-files/contravariant.nix;
        contravariant.flags.tagged = true;
        contravariant.flags.semigroups = true;
        contravariant.flags.statevar = true;
        tasty-hunit.revision = import ./cabal-files/tasty-hunit.nix;
        extra.revision = import ./cabal-files/extra.nix;
        bitvec.revision = import ./cabal-files/bitvec.nix;
        bitvec.flags.simd = true;
        base-compat-batteries.revision = import ./cabal-files/base-compat-batteries.nix;
        scientific.revision = import ./cabal-files/scientific.nix;
        scientific.flags.bytestring-builder = false;
        scientific.flags.integer-simple = false;
        text.revision = (((hackage.text)."1.2.5.0").revisions).default;
        Glob.revision = import ./cabal-files/Glob.nix;
        Stream.revision = import ./cabal-files/Stream.nix;
        math-functions.revision = import ./cabal-files/math-functions.nix;
        math-functions.flags.system-erf = true;
        math-functions.flags.system-expm1 = true;
        vty.revision = import ./cabal-files/vty.nix;
        StateVar.revision = import ./cabal-files/StateVar.nix;
        th-compat.revision = import ./cabal-files/th-compat.nix;
        hpc.revision = (((hackage.hpc)."0.6.1.0").revisions).default;
        attoparsec.revision = import ./cabal-files/attoparsec.nix;
        attoparsec.flags.developer = false;
        array.revision = (((hackage.array)."0.5.4.0").revisions).default;
        basement.revision = import ./cabal-files/basement.nix;
        ghc-boot-th.revision = (((hackage.ghc-boot-th)."9.2.8").revisions).default;
        vector.revision = import ./cabal-files/vector.nix;
        vector.flags.internalchecks = false;
        vector.flags.wall = false;
        vector.flags.boundschecks = true;
        vector.flags.unsafechecks = false;
        comonad.revision = import ./cabal-files/comonad.nix;
        comonad.flags.containers = true;
        comonad.flags.distributive = true;
        comonad.flags.indexed-traversable = true;
        semialign.revision = import ./cabal-files/semialign.nix;
        semialign.flags.semigroupoids = true;
        prettyprinter-ansi-terminal.revision = import ./cabal-files/prettyprinter-ansi-terminal.nix;
        prettyprinter-configurable.revision = import ./cabal-files/prettyprinter-configurable.nix;
        erf.revision = import ./cabal-files/erf.nix;
        Only.revision = import ./cabal-files/Only.nix;
        cborg.revision = import ./cabal-files/cborg.nix;
        cborg.flags.optimize-gmp = true;
        pretty.revision = (((hackage.pretty)."1.1.3.6").revisions).default;
        hashable.revision = import ./cabal-files/hashable.nix;
        hashable.flags.random-initial-seed = false;
        hashable.flags.integer-gmp = true;
        cardano-binary.revision = import ./cabal-files/cardano-binary.nix;
        };
      compiler = {
        version = "9.2.8";
        nix-name = "ghc928";
        packages = {
          "ghc-boot" = "9.2.8";
          "pretty" = "1.1.3.6";
          "haskeline" = "0.8.2";
          "text" = "1.2.5.0";
          "array" = "0.5.4.0";
          "ghc" = "9.2.8";
          "Cabal" = "3.6.3.0";
          "mtl" = "2.2.2";
          "parsec" = "3.1.15.0";
          "bytestring" = "0.11.4.0";
          "filepath" = "1.4.2.2";
          "stm" = "2.5.0.2";
          "terminfo" = "0.4.1.5";
          "ghc-heap" = "9.2.8";
          "ghc-prim" = "0.8.0";
          "ghc-boot-th" = "9.2.8";
          "base" = "4.16.4.0";
          "time" = "1.11.1.1";
          "process" = "1.6.16.0";
          "ghc-bignum" = "1.3";
          "directory" = "1.3.6.2";
          "exceptions" = "0.10.4";
          "hpc" = "0.6.1.0";
          "rts" = "1.0.2";
          "transformers" = "0.5.6.2";
          "template-haskell" = "2.18.0.0";
          "ghci" = "9.2.8";
          "deepseq" = "1.4.6.1";
          "unix" = "2.7.2.2";
          "integer-gmp" = "1.1";
          "binary" = "0.8.9.0";
          "containers" = "0.6.5.1";
          };
        };
      };
  extras = hackage:
    {
      packages = {
        plutarch-implementation = ./.plan.nix/plutarch-implementation.nix;
        };
      };
  modules = [
    ({ lib, ... }:
      { packages = { "plutarch-implementation" = { flags = {}; }; }; })
    ({ lib, ... }:
      {
        packages = {
          "foundation".components.library.planned = lib.mkOverride 900 true;
          "ansi-terminal".components.library.planned = lib.mkOverride 900 true;
          "plutarch".components.library.planned = lib.mkOverride 900 true;
          "deriving-aeson".components.library.planned = lib.mkOverride 900 true;
          "plutus-core".components.sublibs."plutus-core-execlib".planned = lib.mkOverride 900 true;
          "base16-bytestring".components.library.planned = lib.mkOverride 900 true;
          "terminal-size".components.library.planned = lib.mkOverride 900 true;
          "invariant".components.library.planned = lib.mkOverride 900 true;
          "transformers-base".components.library.planned = lib.mkOverride 900 true;
          "base-orphans".components.library.planned = lib.mkOverride 900 true;
          "lazy-search".components.library.planned = lib.mkOverride 900 true;
          "bin".components.library.planned = lib.mkOverride 900 true;
          "th-orphans".components.library.planned = lib.mkOverride 900 true;
          "megaparsec".components.library.planned = lib.mkOverride 900 true;
          "text-iso8601".components.library.planned = lib.mkOverride 900 true;
          "bimap".components.library.planned = lib.mkOverride 900 true;
          "math-functions".components.library.planned = lib.mkOverride 900 true;
          "these".components.library.planned = lib.mkOverride 900 true;
          "pretty-show".components.exes."ppsh".planned = lib.mkOverride 900 true;
          "barbies".components.library.planned = lib.mkOverride 900 true;
          "resourcet".components.library.planned = lib.mkOverride 900 true;
          "extra".components.library.planned = lib.mkOverride 900 true;
          "microlens".components.library.planned = lib.mkOverride 900 true;
          "hedgehog".components.library.planned = lib.mkOverride 900 true;
          "filepath".components.library.planned = lib.mkOverride 900 true;
          "data-default-instances-old-locale".components.library.planned = lib.mkOverride 900 true;
          "pretty-show".components.library.planned = lib.mkOverride 900 true;
          "ral".components.library.planned = lib.mkOverride 900 true;
          "distributive".components.library.planned = lib.mkOverride 900 true;
          "pretty".components.library.planned = lib.mkOverride 900 true;
          "utf8-string".components.library.planned = lib.mkOverride 900 true;
          "plutus-tx".components.sublibs."plutus-tx-testlib".planned = lib.mkOverride 900 true;
          "Cabal".components.library.planned = lib.mkOverride 900 true;
          "reflection".components.library.planned = lib.mkOverride 900 true;
          "plutus-ledger-api".components.exes."evaluation-test".planned = lib.mkOverride 900 true;
          "dec".components.library.planned = lib.mkOverride 900 true;
          "bytestring".components.library.planned = lib.mkOverride 900 true;
          "tasty-golden".components.library.planned = lib.mkOverride 900 true;
          "composition-prelude".components.library.planned = lib.mkOverride 900 true;
          "mwc-random".components.library.planned = lib.mkOverride 900 true;
          "mono-traversable".components.library.planned = lib.mkOverride 900 true;
          "list-t".components.library.planned = lib.mkOverride 900 true;
          "strict".components.library.planned = lib.mkOverride 900 true;
          "comonad".components.library.planned = lib.mkOverride 900 true;
          "data-fix".components.library.planned = lib.mkOverride 900 true;
          "plutus-core".components.exes."uplc".planned = lib.mkOverride 900 true;
          "cborg".components.library.planned = lib.mkOverride 900 true;
          "constraints-extras".components.exes."readme".planned = lib.mkOverride 900 true;
          "prettyprinter-ansi-terminal".components.library.planned = lib.mkOverride 900 true;
          "data-clist".components.library.planned = lib.mkOverride 900 true;
          "vty-crossplatform".components.library.planned = lib.mkOverride 900 true;
          "sop-core".components.library.planned = lib.mkOverride 900 true;
          "serialise".components.library.planned = lib.mkOverride 900 true;
          "profunctors".components.library.planned = lib.mkOverride 900 true;
          "exceptions".components.library.planned = lib.mkOverride 900 true;
          "mmorph".components.library.planned = lib.mkOverride 900 true;
          "safe-exceptions".components.library.planned = lib.mkOverride 900 true;
          "call-stack".components.library.planned = lib.mkOverride 900 true;
          "old-time".components.library.planned = lib.mkOverride 900 true;
          "size-based".components.library.planned = lib.mkOverride 900 true;
          "dlist".components.library.planned = lib.mkOverride 900 true;
          "ghc-prim".components.library.planned = lib.mkOverride 900 true;
          "some".components.library.planned = lib.mkOverride 900 true;
          "dependent-sum-template".components.library.planned = lib.mkOverride 900 true;
          "plutus-core".components.exes."cost-model-budgeting-bench".planned = lib.mkOverride 900 true;
          "array".components.library.planned = lib.mkOverride 900 true;
          "doctest".components.exes."doctest".planned = lib.mkOverride 900 true;
          "quickcheck-instances".components.library.planned = lib.mkOverride 900 true;
          "js-chart".components.library.planned = lib.mkOverride 900 true;
          "binary".components.library.planned = lib.mkOverride 900 true;
          "cardano-crypto-class".components.library.planned = lib.mkOverride 900 true;
          "ghc-boot-th".components.library.planned = lib.mkOverride 900 true;
          "scientific".components.library.planned = lib.mkOverride 900 true;
          "boring".components.library.planned = lib.mkOverride 900 true;
          "splitmix".components.library.planned = lib.mkOverride 900 true;
          "rts".components.library.planned = lib.mkOverride 900 true;
          "nothunks".components.library.planned = lib.mkOverride 900 true;
          "dense-linear-algebra".components.library.planned = lib.mkOverride 900 true;
          "temporary".components.library.planned = lib.mkOverride 900 true;
          "tagged".components.library.planned = lib.mkOverride 900 true;
          "cardano-strict-containers".components.library.planned = lib.mkOverride 900 true;
          "unix".components.library.planned = lib.mkOverride 900 true;
          "hsc2hs".components.exes."hsc2hs".planned = lib.mkOverride 900 true;
          "parser-combinators".components.library.planned = lib.mkOverride 900 true;
          "int-cast".components.library.planned = lib.mkOverride 900 true;
          "vector".components.library.planned = lib.mkOverride 900 true;
          "indexed-traversable-instances".components.library.planned = lib.mkOverride 900 true;
          "data-default-class".components.library.planned = lib.mkOverride 900 true;
          "flat".components.library.planned = lib.mkOverride 900 true;
          "adjunctions".components.library.planned = lib.mkOverride 900 true;
          "multiset".components.library.planned = lib.mkOverride 900 true;
          "vector-binary-instances".components.library.planned = lib.mkOverride 900 true;
          "parallel".components.library.planned = lib.mkOverride 900 true;
          "cryptonite".components.library.planned = lib.mkOverride 900 true;
          "vty-unix".components.library.planned = lib.mkOverride 900 true;
          "foldl".components.library.planned = lib.mkOverride 900 true;
          "type-equality".components.library.planned = lib.mkOverride 900 true;
          "word-array".components.library.planned = lib.mkOverride 900 true;
          "concurrent-output".components.library.planned = lib.mkOverride 900 true;
          "directory".components.library.planned = lib.mkOverride 900 true;
          "happy".components.exes."happy".planned = lib.mkOverride 900 true;
          "time".components.library.planned = lib.mkOverride 900 true;
          "doctest".components.library.planned = lib.mkOverride 900 true;
          "ghc-paths".components.library.planned = lib.mkOverride 900 true;
          "word-wrap".components.library.planned = lib.mkOverride 900 true;
          "prettyprinter-configurable".components.setup.planned = lib.mkOverride 900 true;
          "StateVar".components.library.planned = lib.mkOverride 900 true;
          "deriving-compat".components.library.planned = lib.mkOverride 900 true;
          "data-default".components.library.planned = lib.mkOverride 900 true;
          "case-insensitive".components.library.planned = lib.mkOverride 900 true;
          "fin".components.library.planned = lib.mkOverride 900 true;
          "haskeline".components.library.planned = lib.mkOverride 900 true;
          "ghc".components.library.planned = lib.mkOverride 900 true;
          "th-expand-syns".components.library.planned = lib.mkOverride 900 true;
          "text-zipper".components.library.planned = lib.mkOverride 900 true;
          "config-ini".components.library.planned = lib.mkOverride 900 true;
          "half".components.library.planned = lib.mkOverride 900 true;
          "ghc-paths".components.setup.planned = lib.mkOverride 900 true;
          "brick".components.library.planned = lib.mkOverride 900 true;
          "free".components.library.planned = lib.mkOverride 900 true;
          "plutus-core".components.sublibs."plutus-core-testlib".planned = lib.mkOverride 900 true;
          "unix-compat".components.library.planned = lib.mkOverride 900 true;
          "vector-algorithms".components.library.planned = lib.mkOverride 900 true;
          "blaze-builder".components.library.planned = lib.mkOverride 900 true;
          "bitvec".components.library.planned = lib.mkOverride 900 true;
          "lifted-base".components.library.planned = lib.mkOverride 900 true;
          "lazysmallcheck".components.library.planned = lib.mkOverride 900 true;
          "criterion-measurement".components.library.planned = lib.mkOverride 900 true;
          "unliftio-core".components.library.planned = lib.mkOverride 900 true;
          "data-default-instances-containers".components.library.planned = lib.mkOverride 900 true;
          "ghc-bignum".components.library.planned = lib.mkOverride 900 true;
          "safe".components.library.planned = lib.mkOverride 900 true;
          "constraints".components.library.planned = lib.mkOverride 900 true;
          "integer-conversion".components.library.planned = lib.mkOverride 900 true;
          "indexed-traversable".components.library.planned = lib.mkOverride 900 true;
          "network-uri".components.library.planned = lib.mkOverride 900 true;
          "recursion-schemes".components.library.planned = lib.mkOverride 900 true;
          "Stream".components.library.planned = lib.mkOverride 900 true;
          "criterion".components.library.planned = lib.mkOverride 900 true;
          "code-page".components.library.planned = lib.mkOverride 900 true;
          "memory".components.library.planned = lib.mkOverride 900 true;
          "typed-process".components.library.planned = lib.mkOverride 900 true;
          "base-compat-batteries".components.library.planned = lib.mkOverride 900 true;
          "newtype".components.library.planned = lib.mkOverride 900 true;
          "dictionary-sharing".components.library.planned = lib.mkOverride 900 true;
          "microlens-th".components.library.planned = lib.mkOverride 900 true;
          "tasty-hunit".components.library.planned = lib.mkOverride 900 true;
          "split".components.library.planned = lib.mkOverride 900 true;
          "contravariant".components.library.planned = lib.mkOverride 900 true;
          "th-utilities".components.library.planned = lib.mkOverride 900 true;
          "syb".components.library.planned = lib.mkOverride 900 true;
          "vector-th-unbox".components.library.planned = lib.mkOverride 900 true;
          "criterion".components.exes."criterion-report".planned = lib.mkOverride 900 true;
          "cardano-binary".components.library.planned = lib.mkOverride 900 true;
          "text-short".components.library.planned = lib.mkOverride 900 true;
          "data-array-byte".components.library.planned = lib.mkOverride 900 true;
          "plutus-ledger-api".components.sublibs."plutus-ledger-api-testlib".planned = lib.mkOverride 900 true;
          "assoc".components.library.planned = lib.mkOverride 900 true;
          "process".components.library.planned = lib.mkOverride 900 true;
          "heapwords".components.library.planned = lib.mkOverride 900 true;
          "PyF".components.library.planned = lib.mkOverride 900 true;
          "binary-orphans".components.library.planned = lib.mkOverride 900 true;
          "prettyprinter".components.library.planned = lib.mkOverride 900 true;
          "clock".components.library.planned = lib.mkOverride 900 true;
          "plutus-core".components.sublibs."index-envs".planned = lib.mkOverride 900 true;
          "ansi-terminal-types".components.library.planned = lib.mkOverride 900 true;
          "template-haskell".components.library.planned = lib.mkOverride 900 true;
          "fingertree".components.library.planned = lib.mkOverride 900 true;
          "th-lift".components.library.planned = lib.mkOverride 900 true;
          "stm".components.library.planned = lib.mkOverride 900 true;
          "ghci".components.library.planned = lib.mkOverride 900 true;
          "monoidal-containers".components.library.planned = lib.mkOverride 900 true;
          "dom-lt".components.library.planned = lib.mkOverride 900 true;
          "witherable".components.library.planned = lib.mkOverride 900 true;
          "generically".components.library.planned = lib.mkOverride 900 true;
          "semialign".components.library.planned = lib.mkOverride 900 true;
          "erf".components.library.planned = lib.mkOverride 900 true;
          "generics-sop".components.library.planned = lib.mkOverride 900 true;
          "async".components.library.planned = lib.mkOverride 900 true;
          "ghc-boot".components.library.planned = lib.mkOverride 900 true;
          "microlens-mtl".components.library.planned = lib.mkOverride 900 true;
          "plutus-tx".components.library.planned = lib.mkOverride 900 true;
          "tasty-hedgehog".components.library.planned = lib.mkOverride 900 true;
          "cabal-doctest".components.library.planned = lib.mkOverride 900 true;
          "quickcheck-transformer".components.library.planned = lib.mkOverride 900 true;
          "wl-pprint-annotated".components.library.planned = lib.mkOverride 900 true;
          "vty-unix".components.exes."vty-unix-build-width-table".planned = lib.mkOverride 900 true;
          "th-compat".components.library.planned = lib.mkOverride 900 true;
          "cardano-crypto".components.library.planned = lib.mkOverride 900 true;
          "vty".components.library.planned = lib.mkOverride 900 true;
          "hpc".components.library.planned = lib.mkOverride 900 true;
          "lens".components.library.planned = lib.mkOverride 900 true;
          "plutarch-implementation".components.exes."plutarch-implementation".planned = lib.mkOverride 900 true;
          "logict".components.library.planned = lib.mkOverride 900 true;
          "QuickCheck".components.library.planned = lib.mkOverride 900 true;
          "plutus-core".components.exes."debugger".planned = lib.mkOverride 900 true;
          "double-conversion".components.library.planned = lib.mkOverride 900 true;
          "uuid-types".components.library.planned = lib.mkOverride 900 true;
          "plutus-core".components.sublibs."satint".planned = lib.mkOverride 900 true;
          "semigroupoids".components.library.planned = lib.mkOverride 900 true;
          "ghc-heap".components.library.planned = lib.mkOverride 900 true;
          "plutus-core".components.sublibs."plutus-ir".planned = lib.mkOverride 900 true;
          "attoparsec".components.library.planned = lib.mkOverride 900 true;
          "algebraic-graphs".components.library.planned = lib.mkOverride 900 true;
          "data-default-instances-dlist".components.library.planned = lib.mkOverride 900 true;
          "haskell-lexer".components.library.planned = lib.mkOverride 900 true;
          "plutus-core".components.library.planned = lib.mkOverride 900 true;
          "foldable1-classes-compat".components.library.planned = lib.mkOverride 900 true;
          "mtl".components.library.planned = lib.mkOverride 900 true;
          "dependent-sum".components.library.planned = lib.mkOverride 900 true;
          "plutus-core".components.exes."pir".planned = lib.mkOverride 900 true;
          "plutus-ledger-api".components.library.planned = lib.mkOverride 900 true;
          "statistics".components.library.planned = lib.mkOverride 900 true;
          "th-abstraction".components.library.planned = lib.mkOverride 900 true;
          "attoparsec".components.sublibs."attoparsec-internal".planned = lib.mkOverride 900 true;
          "cassava".components.library.planned = lib.mkOverride 900 true;
          "transformers".components.library.planned = lib.mkOverride 900 true;
          "universe-base".components.library.planned = lib.mkOverride 900 true;
          "prettyprinter-configurable".components.library.planned = lib.mkOverride 900 true;
          "constraints-extras".components.library.planned = lib.mkOverride 900 true;
          "OneTuple".components.library.planned = lib.mkOverride 900 true;
          "th-lift-instances".components.library.planned = lib.mkOverride 900 true;
          "parsec".components.library.planned = lib.mkOverride 900 true;
          "deepseq".components.library.planned = lib.mkOverride 900 true;
          "primitive".components.library.planned = lib.mkOverride 900 true;
          "old-locale".components.library.planned = lib.mkOverride 900 true;
          "lifted-async".components.library.planned = lib.mkOverride 900 true;
          "plutus-core".components.exes."print-cost-model".planned = lib.mkOverride 900 true;
          "microstache".components.library.planned = lib.mkOverride 900 true;
          "text".components.library.planned = lib.mkOverride 900 true;
          "formatting".components.library.planned = lib.mkOverride 900 true;
          "bifunctors".components.library.planned = lib.mkOverride 900 true;
          "dependent-map".components.library.planned = lib.mkOverride 900 true;
          "unordered-containers".components.library.planned = lib.mkOverride 900 true;
          "random".components.library.planned = lib.mkOverride 900 true;
          "base".components.library.planned = lib.mkOverride 900 true;
          "vector-stream".components.library.planned = lib.mkOverride 900 true;
          "kan-extensions".components.library.planned = lib.mkOverride 900 true;
          "nonempty-vector".components.library.planned = lib.mkOverride 900 true;
          "integer-logarithms".components.library.planned = lib.mkOverride 900 true;
          "Glob".components.library.planned = lib.mkOverride 900 true;
          "integer-gmp".components.library.planned = lib.mkOverride 900 true;
          "tasty".components.library.planned = lib.mkOverride 900 true;
          "transformers-compat".components.library.planned = lib.mkOverride 900 true;
          "plutus-core".components.exes."plc".planned = lib.mkOverride 900 true;
          "monad-control".components.library.planned = lib.mkOverride 900 true;
          "colour".components.library.planned = lib.mkOverride 900 true;
          "containers".components.library.planned = lib.mkOverride 900 true;
          "th-reify-many".components.library.planned = lib.mkOverride 900 true;
          "time-compat".components.library.planned = lib.mkOverride 900 true;
          "basement".components.library.planned = lib.mkOverride 900 true;
          "optparse-applicative".components.library.planned = lib.mkOverride 900 true;
          "aeson".components.library.planned = lib.mkOverride 900 true;
          "base-compat".components.library.planned = lib.mkOverride 900 true;
          "base64-bytestring".components.library.planned = lib.mkOverride 900 true;
          "plutus-core".components.exes."traceToStacks".planned = lib.mkOverride 900 true;
          "hashable".components.library.planned = lib.mkOverride 900 true;
          "semigroups".components.library.planned = lib.mkOverride 900 true;
          "terminfo".components.library.planned = lib.mkOverride 900 true;
          "void".components.library.planned = lib.mkOverride 900 true;
          "Only".components.library.planned = lib.mkOverride 900 true;
          "testing-type-modifiers".components.library.planned = lib.mkOverride 900 true;
          };
        })
    ];
  }